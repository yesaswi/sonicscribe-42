name: CI/CD

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    branches:
      - main
      - develop

env:
  PYTHON_VERSION: 3.12.3
  TERRAFORM_VERSION: 1.8.3

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt
      - name: Run tests
        run: |
          python -m pytest tests/unit
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Initialize Terraform
        run: terraform init -backend=false
        working-directory: terraform

      - name: Validate Terraform configuration
        run: terraform validate
        working-directory: terraform

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'

    env:
      TF_VAR_region: us-east4
      TF_VAR_project_id: sonicscribe-42
      GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/sa_key.json

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Set up Google Cloud credentials
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > $GOOGLE_APPLICATION_CREDENTIALS

      - name: Initialize Terraform
        run: terraform init -backend-config="bucket=${{ secrets.TF_BACKEND_BUCKET }}" -backend-config="prefix=${{ secrets.TF_BACKEND_PREFIX }}"
        working-directory: terraform

      - name: Validate Terraform configuration
        run: terraform validate
        working-directory: terraform

      - name: Plan Terraform changes
        run: terraform plan -out=tfplan
        working-directory: terraform

      - name: Apply Terraform changes (develop branch)
        if: github.ref == 'refs/heads/develop'
        run: terraform apply -auto-approve tfplan
        working-directory: terraform

      - name: Apply Terraform changes (main branch)
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        working-directory: terraform
